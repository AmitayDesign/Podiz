// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.1 (swiftlang-1300.0.31.4 clang-1300.0.29.6)
// swift-module-flags: -target arm64-apple-tvos11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FBSDKLoginKit
import FBSDKCoreKit
import FBSDKCoreKit_Basics
@_exported import FBSDKLoginKit
import Foundation
import Swift
import UIKit
import _Concurrency
extension FBSDKCoreKit.AppEvents : FBSDKLoginKit._LoginEventLogging {
}
@objcMembers @objc(FBSDKDeviceLoginCodeInfo) final public class DeviceLoginCodeInfo : ObjectiveC.NSObject {
  @objc final public let identifier: Swift.String
  @objc final public let loginCode: Swift.String
  @objc final public let verificationURL: Foundation.URL
  @objc final public let expirationDate: Foundation.Date
  @objc final public let pollingInterval: Swift.UInt
  @objc public init(identifier: Swift.String, loginCode: Swift.String, verificationURL: Foundation.URL, expirationDate: Foundation.Date, pollingInterval: Swift.UInt)
  @objc deinit
}
@objcMembers @objc(FBSDKDeviceLoginManagerResult) final public class DeviceLoginManagerResult : ObjectiveC.NSObject {
  @objc final public var accessToken: FBSDKCoreKit.AccessToken? {
    get
  }
  @objc final public var isCancelled: Swift.Bool {
    get
  }
  @objc public init(token: FBSDKCoreKit.AccessToken?, isCancelled cancelled: Swift.Bool)
  @objc deinit
}
extension FBSDKCoreKit.InternalUtility : FBSDKLoginKit._UserInterfaceElementProviding {
}
extension FBSDKCoreKit.InternalUtility : FBSDKLoginKit._UserInterfaceStringProviding {
}
extension FBSDKCoreKit.ServerConfigurationProvider : FBSDKLoginKit._ServerConfigurationProviding {
}
@_inheritsConvenienceInitializers @objc(FBSDKDevicePoller) final public class _DevicePoller : ObjectiveC.NSObject, FBSDKLoginKit.DevicePolling {
  @objc final public func scheduleBlock(_ block: @escaping () -> Swift.Void, interval: Swift.UInt)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers @objc(FBSDKDeviceRequestsHelper) final public class _DeviceRequestsHelper : ObjectiveC.NSObject {
  @objc public static func getDeviceInfo() -> Swift.String
  @objc @discardableResult
  public static func startAdvertisementService(loginCode: Swift.String, delegate: Foundation.NetServiceDelegate) -> Swift.Bool
  @objc public static func isDelegate(_ delegate: Foundation.NetServiceDelegate, forAdvertisementService service: Foundation.NetService) -> Swift.Bool
  @objc public static func cleanUpAdvertisementService(for delegate: Foundation.NetServiceDelegate)
  @objc override dynamic public init()
  @objc deinit
}
@objc(_FBSDKLoginEventLogging) public protocol _LoginEventLogging {
  @objc var flushBehavior: FBSDKCoreKit.AppEvents.FlushBehavior { get }
  @objc func logInternalEvent(_ eventName: FBSDKCoreKit.AppEvents.Name, parameters: [FBSDKCoreKit.AppEvents.ParameterName : Any]?, isImplicitlyLogged: Swift.Bool)
  @objc func flush()
}
@objc(_FBSDKServerConfigurationProviding) public protocol _ServerConfigurationProviding {
  @objc(loadServerConfigurationWithCompletionBlock:) func loadServerConfiguration(completion: FBSDKCoreKit.LoginTooltipBlock?)
}
@objc(_FBSDKUserInterfaceElementProviding) public protocol _UserInterfaceElementProviding {
  @objc func topMostViewController() -> UIKit.UIViewController?
  @objc(viewControllerForView:) func viewController(for view: UIKit.UIView) -> UIKit.UIViewController?
}
@objc(_FBSDKUserInterfaceStringProviding) public protocol _UserInterfaceStringProviding {
  @objc var bundleForStrings: Foundation.Bundle { get }
}
